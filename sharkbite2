--loadstring(game:HttpGet("https://raw.githubusercontent.com/mafuasahina/whatever/main/sharkbite2"))()

local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "Sharkbite 2",
    LoadingTitle = "Sharkbite 2 whatever",
    LoadingSubtitle = "by mafuyu",
    Theme = "Default",
    ToggleUIKeybind = "K",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = nil,
        FileName = "SharkConfig"
    },
    Discord = {
        Enabled = false,
        Invite = "",
        RememberJoins = true
    },
    KeySystem = false
})

local Tab = Window:CreateTab("Main", 4483362458)

local remote = nil
local player = game.Players.LocalPlayer
local backpack = player:WaitForChild("Backpack")
local character = player.Character or player.CharacterAdded:Wait()
local sharkName = nil
local remotesFolder = game:GetService("ReplicatedStorage"):WaitForChild("Projectiles"):WaitForChild("Events"):WaitForChild("Weapons"):WaitForChild("remotes")

local function hookRemote(remoteObject)
    local mt = getrawmetatable(game)
    setreadonly(mt, false)
    local oldNamecall = mt.__namecall
    mt.__namecall = newcclosure(function(self, ...)
        local method = getnamecallmethod()
        if self == remoteObject and (method == "FireServer" or method == "InvokeServer") then
            remote = self.Name
        end
        return oldNamecall(self, ...)
    end)
end

for _, child in ipairs(remotesFolder:GetChildren()) do
    if child:IsA("RemoteEvent") or child:IsA("RemoteFunction") then
        hookRemote(child)
    end
end

remotesFolder.ChildAdded:Connect(function(child)
    if child:IsA("RemoteEvent") or child:IsA("RemoteFunction") then
        hookRemote(child)
    end
end)

local function getShark()
    local sharksFolder = workspace:FindFirstChild("Sharks")
    if sharksFolder then
        for _, shark in ipairs(sharksFolder:GetChildren()) do
            if shark:IsA("Model") then
                sharkName = shark.Name
                return
            end
        end
    end
    sharkName = nil
end

local function KillShark()
    for _, tool in ipairs(backpack:GetChildren()) do
        if tool:IsA("Tool") then
            tool.Parent = character
        end
    end
    for j = 1, 20 do
        if sharkName and remote then
            local shark = workspace:WaitForChild("Sharks"):FindFirstChild(sharkName)
            game:GetService("ReplicatedStorage")
                :WaitForChild("Projectiles")
                :WaitForChild("Events")
                :WaitForChild("Weapons")
                :WaitForChild("remotes")
                :WaitForChild(remote):FireServer(shark)
        end
    end
end

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local center = Vector3.new(0, -100, 0)
local radius = 1000
local speed = 2
local angle = 0
local hrp

local function updateHRP()
    local character = player.Character or player.CharacterAdded:Wait()
    hrp = character:WaitForChild("HumanoidRootPart")
end

player.CharacterAdded:Connect(updateHRP)
if player.Character then updateHRP() end

local runningConnection

local Toggle
Toggle = Tab:CreateToggle({
    Name = "Autofarm [Shoot shark once to enable]",
    CurrentValue = false,
    Flag = "AutoKillShark",
    Callback = function(on)
        if on then
            if not remote then
                Rayfield:Notify({
                    Title = "Error",
                    Content = "Shoot the shark first before turning on",
                    Duration = 4
                })
                task.delay(0.2, function()
                    Toggle:Set(false)
                end)
                return
            end
            runningConnection = RunService.Heartbeat:Connect(function(dt)
                KillShark()
                getShark()
                if not hrp or not remote then return end
                local chinook = workspace:FindFirstChild("Chinook")
                local interior = chinook and chinook:FindFirstChild("interior")
                if interior and not sharkName then
                    hrp.CFrame = interior.CFrame
                elseif sharkName then
                    angle += speed * dt
                    local offset = Vector3.new(math.cos(angle), 0, math.sin(angle)) * radius
                    hrp.CFrame = CFrame.new(center + offset, center)
                end
            end)
        else
            if runningConnection then
                runningConnection:Disconnect()
                runningConnection = nil
            end
        end
    end,
})
