local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "Sharkbite 2",
    LoadingTitle = "Sharkbite 2 whatever",
    LoadingSubtitle = "by mafuyu",
    Theme = "Default",
    ToggleUIKeybind = "K",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = nil,
        FileName = "SharkConfig"
    },
    Discord = {
        Enabled = false,
        Invite = "",
        RememberJoins = true
    },
    KeySystem = false
})

local Tab = Window:CreateTab("Main", 4483362458)
local remote, sharkName, hrp
local player = game.Players.LocalPlayer
local backpack = player:WaitForChild("Backpack")
local character = player.Character or player.CharacterAdded:Wait()
local remotesFolder = game:GetService("ReplicatedStorage"):WaitForChild("Projectiles"):WaitForChild("Events"):WaitForChild("Weapons"):WaitForChild("remotes")
local mt = getrawmetatable(game)
setreadonly(mt, false)
local oldNamecall = mt.__namecall
mt.__namecall = newcclosure(function(self, ...)
    local method = getnamecallmethod()
    if (method == "FireServer" or method == "InvokeServer") and self.Parent == remotesFolder then
        remote = self.Name
    end
    return oldNamecall(self, ...)
end)
remotesFolder.ChildAdded:Connect(function(child)
    if child:IsA("RemoteEvent") or child:IsA("RemoteFunction") then
        remote = child.Name
    end
end)

local function getShark()
    local f = workspace:FindFirstChild("Sharks")
    if f then
        for _, s in ipairs(f:GetChildren()) do
            if s:IsA("Model") then
                sharkName = s.Name
                return
            end
        end
    end
    sharkName = nil
end

local function KillShark()
    for _, tool in ipairs(backpack:GetChildren()) do
        if tool:IsA("Tool") then tool.Parent = character end
    end
    if sharkName and remote then
        local shark = workspace.Sharks:FindFirstChild(sharkName)
        if shark then
            for j = 1, 40 do
                remotesFolder[remote]:FireServer(shark)
            end
        end
    end
end

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local center, radius, speed, angle = Vector3.new(0,0,0), 1000, 2, 0

local function updateHRP()
    character = player.Character or player.CharacterAdded:Wait()
    backpack = player:WaitForChild("Backpack")
    hrp = character:WaitForChild("HumanoidRootPart")
end
player.CharacterAdded:Connect(updateHRP)
if player.Character then updateHRP() end

local runningConnection
Tab:CreateToggle({
    Name = "Autofarm [Shoot shark once to enable]",
    CurrentValue = false,
    Flag = "AutoKillShark",
    Callback = function(on)
        if on then
            runningConnection = RunService.Heartbeat:Connect(function(dt)
                if player.Team and player.Team.Name ~= "Shark" and hrp then
                    if not remote then return end
                    KillShark()
                    getShark()
                    if not sharkName then
                        local chinook = workspace:FindFirstChild("Chinook")
                        local interior = chinook and chinook:FindFirstChild("interior")
                        if interior then hrp.CFrame = interior.CFrame end
                    else
                        angle += speed * dt
                        local phase = (angle % 4)
                        local offset
                        if phase < 1 then
                            offset = Vector3.new(radius, 0, math.tan(phase*math.pi/2)*radius)
                        elseif phase < 2 then
                            offset = Vector3.new(-math.tan((phase-1)*math.pi/2)*radius, 0, radius)
                        elseif phase < 3 then
                            offset = Vector3.new(-radius, 0, -math.tan((phase-2)*math.pi/2)*radius)
                        else
                            offset = Vector3.new(math.tan((phase-3)*math.pi/2)*radius, 0, -radius)
                        end
                        offset = CFrame.Angles(0, math.rad(45), 0):VectorToWorldSpace(offset)
                        hrp.CFrame = CFrame.new(center + offset, center)
                    end
                end
            end)
            player.CharacterAdded:Connect(function() task.wait(0.5) updateHRP() end)
        else
            if runningConnection then runningConnection:Disconnect() runningConnection=nil end
        end
    end
})

local AutoWinConnection
local function getNearestAliveSurvivor()
    local nearest, dist = nil, math.huge
    local myPos = hrp and hrp.Position or Vector3.zero
    for _, plr in ipairs(Players:GetPlayers()) do
        if plr ~= player and plr.Team and plr.Team.Name == "Survivor" then
            local c = plr.Character
            local h = c and c:FindFirstChild("Humanoid")
            local t = c and c:FindFirstChild("HumanoidRootPart")
            if h and h.Health > 0 and t then
                local d = (t.Position - myPos).Magnitude
                if d < dist then dist, nearest = d, plr end
            end
        end
    end
    return nearest
end

Tab:CreateToggle({
    Name = "Auto win as shark",
    CurrentValue = false,
    Flag = "AutoWinShark",
    Callback = function(state)
        if state then
            AutoWinConnection = RunService.Heartbeat:Connect(function()
                if player.Team and player.Team.Name == "Shark" and hrp then
                    local target = getNearestAliveSurvivor()
                    if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
                        local pos = target.Character.HumanoidRootPart.Position
                        for _, shark in ipairs(workspace.Sharks:GetChildren()) do
                            for _, part in ipairs(shark:GetDescendants()) do
                                if part:IsA("BasePart") and part.Name == "Ball" then
                                    part.CFrame = CFrame.new(pos)
                                end
                            end
                        end
                    end
                end
            end)
            player.CharacterAdded:Connect(function() task.wait(0.5) updateHRP() end)
        else
            if AutoWinConnection then AutoWinConnection:Disconnect() AutoWinConnection=nil end
        end
    end
})

local sharkESPConnection = {}
local function setSharkESP(enabled)
    local f = workspace:FindFirstChild("Sharks")
    if not f then return end
    for _, c in ipairs(sharkESPConnection) do c:Disconnect() end
    table.clear(sharkESPConnection)
    for _, s in ipairs(f:GetDescendants()) do
        if s:IsA("Highlight") then
            s.Enabled = enabled
            s.OutlineTransparency = enabled and 0 or 1
            table.insert(sharkESPConnection, s:GetPropertyChangedSignal("Enabled"):Connect(function() s.Enabled = enabled end))
            table.insert(sharkESPConnection, s:GetPropertyChangedSignal("OutlineTransparency"):Connect(function() s.OutlineTransparency = enabled and 0 or 1 end))
        end
    end
end

local function watchForNewSharks(state)
    local f = workspace:FindFirstChild("Sharks")
    if f then
        table.insert(sharkESPConnection, f.DescendantAdded:Connect(function(desc)
            if desc:IsA("Highlight") then setSharkESP(state) end
        end))
    end
end

Tab:CreateToggle({
    Name = "Highlight sharks [ESP]",
    CurrentValue = false,
    Flag = "SharkESP",
    Callback = function(state)
        setSharkESP(state)
        watchForNewSharks(state)
    end
})
